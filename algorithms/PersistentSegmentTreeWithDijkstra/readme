
You are given a weighted undirected graph on n vertices and m edges. 
Find the shortest path from vertex s to vertex t or else state that such path doesn't exist.

the trick is that edges have weights up to 2^100000.

full problem statement:
http://codeforces.com/contest/464/problem/E?locale=en

solution:
http://codeforces.com/blog/entry/13694?locale=en

basic idea is as old as time: use Dijkstra`s algorithm (with sets) to find shortest path between two vertices.
In order to handle big edge weights persistent segment trees are used which support following operations:

1. add 1 to the number (O(logn))
2. compare two numbers (O(logn))

(n <= 100000)
